[{"C:\\Users\\uw\\Desktop\\site\\e-commerce\\src\\index.js":"1","C:\\Users\\uw\\Desktop\\site\\e-commerce\\src\\Containers\\App.js":"2","C:\\Users\\uw\\Desktop\\site\\e-commerce\\src\\Components\\Products\\Products.jsx":"3","C:\\Users\\uw\\Desktop\\site\\e-commerce\\src\\Components\\Products\\Product\\Product.jsx":"4","C:\\Users\\uw\\Desktop\\site\\e-commerce\\src\\Components\\Products\\Product\\style.js":"5","C:\\Users\\uw\\Desktop\\site\\e-commerce\\src\\Components\\Navbar\\Navbar.jsx":"6","C:\\Users\\uw\\Desktop\\site\\e-commerce\\src\\Components\\index.js":"7","C:\\Users\\uw\\Desktop\\site\\e-commerce\\src\\Components\\Navbar\\style.js":"8","C:\\Users\\uw\\Desktop\\site\\e-commerce\\src\\Components\\Products\\style.js":"9","C:\\Users\\uw\\Desktop\\site\\e-commerce\\src\\lib\\commerce.js":"10","C:\\Users\\uw\\Desktop\\site\\e-commerce\\src\\Components\\Cart\\Cart.jsx":"11","C:\\Users\\uw\\Desktop\\site\\e-commerce\\src\\Components\\Cart\\style.js":"12","C:\\Users\\uw\\Desktop\\site\\e-commerce\\src\\Components\\Cart\\CartItem\\CartItem.jsx":"13","C:\\Users\\uw\\Desktop\\site\\e-commerce\\src\\Components\\Cart\\CartItem\\style.js":"14","C:\\Users\\uw\\Desktop\\site\\e-commerce\\src\\Components\\CheckoutForm\\Checkout\\Checkout.jsx":"15","C:\\Users\\uw\\Desktop\\site\\e-commerce\\src\\Components\\CheckoutForm\\Checkout\\style.js":"16","C:\\Users\\uw\\Desktop\\site\\e-commerce\\src\\Components\\CheckoutForm\\AddressForm.jsx":"17","C:\\Users\\uw\\Desktop\\site\\e-commerce\\src\\Components\\CheckoutForm\\PaymentForm.jsx":"18","C:\\Users\\uw\\Desktop\\site\\e-commerce\\src\\Components\\CheckoutForm\\CustomTextField.jsx":"19","C:\\Users\\uw\\Desktop\\site\\e-commerce\\src\\Components\\CheckoutForm\\Review.jsx":"20","C:\\Users\\uw\\Desktop\\site\\e-commerce\\src\\Components\\SideMenu\\SideMenu.jsx":"21","C:\\Users\\uw\\Desktop\\site\\e-commerce\\src\\Components\\SideMenu\\style.js":"22","C:\\Users\\uw\\Desktop\\site\\e-commerce\\src\\Components\\SideMenu\\Items\\Items.jsx":"23","C:\\Users\\uw\\Desktop\\site\\e-commerce\\src\\Components\\SideMenu\\Items\\style.js":"24"},{"size":158,"mtime":1610574267806,"results":"25","hashOfConfig":"26"},{"size":3234,"mtime":1611857897081,"results":"27","hashOfConfig":"26"},{"size":669,"mtime":1610912076573,"results":"28","hashOfConfig":"26"},{"size":1437,"mtime":1610915378123,"results":"29","hashOfConfig":"26"},{"size":397,"mtime":1610614789436,"results":"30","hashOfConfig":"26"},{"size":1343,"mtime":1611141108876,"results":"31","hashOfConfig":"26"},{"size":298,"mtime":1611773868353,"results":"32","hashOfConfig":"26"},{"size":1630,"mtime":1610718665579,"results":"33","hashOfConfig":"26"},{"size":298,"mtime":1610721178701,"results":"34","hashOfConfig":"26"},{"size":123,"mtime":1610722377601,"results":"35","hashOfConfig":"26"},{"size":2096,"mtime":1611147940236,"results":"36","hashOfConfig":"26"},{"size":711,"mtime":1611141489708,"results":"37","hashOfConfig":"26"},{"size":1360,"mtime":1611144112468,"results":"38","hashOfConfig":"26"},{"size":349,"mtime":1611138522400,"results":"39","hashOfConfig":"26"},{"size":3944,"mtime":1611772457748,"results":"40","hashOfConfig":"26"},{"size":1208,"mtime":1611150107121,"results":"41","hashOfConfig":"26"},{"size":5660,"mtime":1611769266253,"results":"42","hashOfConfig":"26"},{"size":3060,"mtime":1611772447250,"results":"43","hashOfConfig":"26"},{"size":564,"mtime":1611690292135,"results":"44","hashOfConfig":"26"},{"size":1150,"mtime":1611663415196,"results":"45","hashOfConfig":"26"},{"size":278,"mtime":1611775864664,"results":"46","hashOfConfig":"26"},{"size":233,"mtime":1611852783652,"results":"47","hashOfConfig":"26"},{"size":1105,"mtime":1611857745789,"results":"48","hashOfConfig":"26"},{"size":523,"mtime":1611857924565,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"10140f5",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"52"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"C:\\Users\\uw\\Desktop\\site\\e-commerce\\src\\index.js",[],["105","106"],"C:\\Users\\uw\\Desktop\\site\\e-commerce\\src\\Containers\\App.js",[],"C:\\Users\\uw\\Desktop\\site\\e-commerce\\src\\Components\\Products\\Products.jsx",[],"C:\\Users\\uw\\Desktop\\site\\e-commerce\\src\\Components\\Products\\Product\\Product.jsx",[],"C:\\Users\\uw\\Desktop\\site\\e-commerce\\src\\Components\\Products\\Product\\style.js",[],"C:\\Users\\uw\\Desktop\\site\\e-commerce\\src\\Components\\Navbar\\Navbar.jsx",["107","108"],"import React from 'react'\r\nimport { AppBar, Toolbar, IconButton, Badge, MenuItem, Menu, Typography } from '@material-ui/core'\r\nimport { ShoppingCart } from '@material-ui/icons'\r\nimport logo from '../../assets/logo.png'\r\nimport makeStyles from './style'\r\nimport { Link, useLocation } from 'react-router-dom'\r\n\r\nconst Navbar = (props) => {\r\n    const classes = makeStyles()\r\n    const location = useLocation()\r\n    return (\r\n        <AppBar position=\"fixed\" className={classes.appBar} color=\"inherit\">\r\n            <Toolbar>\r\n                <Typography component={Link} to=\"/\" variant=\"h6\" className={classes.title} color=\"inherit\">\r\n                    <img src={logo} alt=\"Milevia\" height=\"80px\" className={classes.image} />\r\n                    Milevia\r\n                </Typography>\r\n                <div className={classes.grow}/>\r\n                {location.pathname === '/'&& (\r\n                <div className={classes.button}>\r\n                    <IconButton aria-label=\"show cart items\" color=\"inherit\" component={Link} to=\"/cart\">\r\n                        <Badge badgeContent={props.totalItems} color=\"secondary\">\r\n                            <ShoppingCart />\r\n                        </Badge>\r\n                    </IconButton>\r\n                </div>)}\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","C:\\Users\\uw\\Desktop\\site\\e-commerce\\src\\Components\\index.js",[],"C:\\Users\\uw\\Desktop\\site\\e-commerce\\src\\Components\\Navbar\\style.js",[],"C:\\Users\\uw\\Desktop\\site\\e-commerce\\src\\Components\\Products\\style.js",[],"C:\\Users\\uw\\Desktop\\site\\e-commerce\\src\\lib\\commerce.js",[],"C:\\Users\\uw\\Desktop\\site\\e-commerce\\src\\Components\\Cart\\Cart.jsx",[],"C:\\Users\\uw\\Desktop\\site\\e-commerce\\src\\Components\\Cart\\style.js",["109"],"import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles(theme => ({\r\n  toolbar: theme.mixins.toolbar,\r\n  title: {\r\n    marginTop: '5%',\r\n    marginBottom: '1.5%'\r\n  },\r\n  emptyButton: {\r\n    minWidth: '150px',\r\n    [theme.breakpoints.down('xs')]: {\r\n      marginBottom: '5px',\r\n    },\r\n    [theme.breakpoints.up('xs')]: {\r\n      marginRight: '20px',\r\n    },\r\n  },\r\n  checkoutButton: {\r\n    minWidth: '150px',\r\n  },\r\n  link: {\r\n    textDecoration: 'none',\r\n  },\r\n  cardDetails: {\r\n    display: 'flex',\r\n    marginTop: '10%',\r\n    width: '100%',\r\n    justifyContent: 'space-between',\r\n  },\r\n  link : {\r\n    textDecoration: 'none',\r\n    fontWeight: '900',\r\n    color: 'coral'\r\n  }\r\n}));","C:\\Users\\uw\\Desktop\\site\\e-commerce\\src\\Components\\Cart\\CartItem\\CartItem.jsx",[],"C:\\Users\\uw\\Desktop\\site\\e-commerce\\src\\Components\\Cart\\CartItem\\style.js",[],"C:\\Users\\uw\\Desktop\\site\\e-commerce\\src\\Components\\CheckoutForm\\Checkout\\Checkout.jsx",["110"],"import React, {useState, useEffect} from 'react'\r\nimport { Paper, Stepper, Step, StepLabel, Typography, CircularProgress, Divider, Button,  CssBaseline} from '@material-ui/core'\r\nimport makeStyles from './style'\r\nimport PaymentForm from '../PaymentForm'\r\nimport AddressForm from '../AddressForm'\r\nimport { commerce } from '../../../lib/commerce'\r\nimport { Link, useHistory } from 'react-router-dom'\r\n\r\n\r\nfunction Checkout({ cart, order, onCaptureCheckout, error, refreshCart }) {\r\n    const steps = ['Shipping address', 'Payment details']\r\n    const classes = makeStyles()\r\n    const [checkoutToken, setCheckoutToken] = useState(null)\r\n    const [activeStep, setActiveStep] = useState(0)\r\n    const [shippingData, setShippingData] = useState({})\r\n    const [isFinished, setIsFinished] = useState(false)\r\n    const history = useHistory()\r\n    useEffect(() =>{\r\n        const generateToken = async() => {\r\n            try{\r\n                const token = await commerce.checkout.generateToken(cart.id, { type: 'cart' });\r\n                setCheckoutToken(token)\r\n            }catch{\r\n                if (activeStep !== steps.length){\r\n                    history.push('/')\r\n                }\r\n            }\r\n\r\n        }\r\n        generateToken()\r\n    }, [cart])\r\n    const nextStep = () => setActiveStep(previous => previous+1)\r\n    const backStep = () => setActiveStep(previous => previous-1)\r\n\r\n    const next = (data) => {\r\n        setShippingData(data)\r\n        nextStep()\r\n    }\r\n    const timeout = () => {\r\n        setTimeout(() => {\r\n            setIsFinished(true)\r\n            refreshCart()\r\n        }, 3000)\r\n    }\r\n    const Form = () => {\r\n        return activeStep === 0? <AddressForm checkoutToken= {checkoutToken} next={next}/>:<PaymentForm  shippingData={shippingData} checkoutToken= {checkoutToken} backStep={backStep} onCaptureCheckout={onCaptureCheckout} nextStep={nextStep} timeout={timeout} />\r\n    }\r\n    let Confirmation = () => (order.customer?(\r\n        <>\r\n        <div>\r\n            <Typography variant=\"h5\">Thank you for your purshase, {order.customer.firstname} {order.customer.lastname}</Typography>  \r\n            <Divider className={classes.divider}/>\r\n            <Typography variant=\"subtitle2\">Order ref: {order.customer_reference}</Typography>\r\n        </div>\r\n        <br />\r\n        <Button component={Link} to=\"/\" type=\"button\" variant=\"outlined\">Back to Home</Button>  \r\n        </>\r\n    ): isFinished? (\r\n        <>\r\n        <div>\r\n            <Typography variant=\"h5\">Thank you for your purshase, John Wick</Typography>  \r\n            <Divider className={classes.divider}/>\r\n        </div>\r\n        <br />\r\n        <Button component={Link} to=\"/\" type=\"button\" variant=\"outlined\">Back to Home</Button>  \r\n        </>\r\n\r\n    ):(\r\n        <div className={classes.spinner}>\r\n            <CircularProgress />\r\n        </div>\r\n    ))\r\n    // if (error){\r\n    //     Confirmation =  () =>(\r\n    //     <>\r\n    //         <Typography variant=\"h5\">Error: {error}</Typography>\r\n    //         <br />\r\n    //         <Button component={Link} to=\"/\" type=\"button\" variant=\"outlined\">Back to Home</Button>  \r\n\r\n    //     </>\r\n    //     )\r\n    // }\r\n    return (\r\n        <>\r\n        <CssBaseline />\r\n        <div className={classes.toolbar} />\r\n            <main className={classes.layout}>\r\n                <Paper className={classes.paper}>\r\n                <Typography variant=\"h4\" align=\"center\">Checkout</Typography>\r\n                <Stepper activeStep={activeStep} className={classes.stepper}>\r\n                    {steps.map((label) => (\r\n                    <Step key={label}>\r\n                        <StepLabel>{label}</StepLabel>\r\n                    </Step>\r\n                    ))}\r\n                </Stepper>\r\n                {activeStep === steps.length ? <Confirmation /> : checkoutToken && <Form />}\r\n                </Paper>\r\n            </main>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Checkout\r\n","C:\\Users\\uw\\Desktop\\site\\e-commerce\\src\\Components\\CheckoutForm\\Checkout\\style.js",[],"C:\\Users\\uw\\Desktop\\site\\e-commerce\\src\\Components\\CheckoutForm\\AddressForm.jsx",["111","112"],"import React, { useState, useEffect } from 'react'\r\nimport {InputLabel, Select, MenuItem, Button, Grid, Typography} from '@material-ui/core'\r\nimport { useForm, FormProvider } from 'react-hook-form'\r\nimport FormInput from './CustomTextField' \r\nimport { commerce } from '../../lib/commerce'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction AddressForm({ checkoutToken, next }) {\r\n    const methods = useForm()\r\n    const [shippingCountries, setShippingCountries] = useState([])\r\n    const [shippingCountry, setShippingCountry] = useState('')\r\n    const [shippingDevisions, setShippingDevisions] = useState([])\r\n    const [shippingDevision, setShippingDevision] = useState('')\r\n    const [shippingOptions, setShippingOptions] = useState([])\r\n    const [shippingOption, setShippingOption] = useState('')\r\n\r\n    const countries = Object.entries(shippingCountries).map(([code, label]) => ({code: code, label:label}))\r\n    const subDivisions = Object.entries(shippingDevisions).map(([code, label]) => ({code: code, label:label}))\r\n    const options = shippingOptions.map(shipOpt => ({id: shipOpt.id, label: `${shipOpt.description} - (${shipOpt.price.formatted_with_symbol})`}))\r\n    const fetchShippingCountries = async(checkoutTokenId) => {\r\n        const res = await commerce.services.localeListShippingCountries(checkoutTokenId)\r\n        \r\n        setShippingCountries(res.countries)\r\n        setShippingCountry(Object.keys(res.countries)[0])\r\n        \r\n    }\r\n    const fetchSubDivisions = async(countryCode) => {\r\n        const res = await commerce.services.localeListSubdivisions(countryCode)\r\n        setShippingDevisions(res.subdivisions)\r\n        setShippingDevision(Object.keys(res.subdivisions)[0])\r\n    }\r\n    const fetchShippingOptions = async (checkoutTokenId, country, region = null) => {\r\n        const options = await commerce.checkout.getShippingOptions(checkoutTokenId, { country, region: region })\r\n        console.log(options)\r\n        setShippingOptions(options)\r\n        setShippingOption(options[0].id)\r\n    }\r\n    useEffect(() => {\r\n        fetchShippingCountries(checkoutToken.id)\r\n    }, [])\r\n    useEffect(() => {\r\n        if (shippingCountry) fetchSubDivisions(shippingCountry)\r\n\r\n    }, [shippingCountry])\r\n    useEffect(() => {\r\n        if (shippingDevision) {\r\n            fetchShippingOptions(checkoutToken.id, shippingCountry, shippingDevision)\r\n        }\r\n    }, [shippingDevision])\r\n    return (\r\n        <>\r\n           <Typography variant=\"h6\" gutterBottom>Shipping Address</Typography>\r\n           <FormProvider {...methods}>\r\n              <form onSubmit={methods.handleSubmit((data) => next({...data, shippingCountry, shippingDevision, shippingOption}))} >\r\n                <Grid container spacing={3}>\r\n                    <FormInput required name=\"firstName\" label=\"First name\"/>\r\n                    <FormInput required name=\"lastName\" label=\"Last name\"/>\r\n                    <FormInput required name=\"address1\" label=\"Address\"/>\r\n                    <FormInput required name=\"email\" label=\"Email\"/>\r\n                    <FormInput required name=\"city\" label=\"City\" />\r\n                    <FormInput required name=\"zip\" label=\"ZIP / Postal code\"/>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <InputLabel>Shipping Country</InputLabel>\r\n                        <Select value={shippingCountry} fullWidth onChange={(e) => setShippingCountry(e.target.value)}>\r\n                        {countries.map((country) => {\r\n                            return (\r\n                                <MenuItem key={country.code} value={country.code} >\r\n                                        {country.label}\r\n                                </MenuItem>\r\n                            )\r\n                        })}     \r\n                        </Select>\r\n                       \r\n                    </Grid>\r\n                    \r\n                    <Grid item xs={12} sm={6}>\r\n                        <InputLabel>Shipping Sub-division</InputLabel>\r\n                        <Select value={shippingDevision} fullWidth onChange={(e) => setShippingDevision(e.target.value)}>\r\n                           {subDivisions.map((sub) => {\r\n                               return (\r\n                                <MenuItem key={sub.code} value={sub.code} >\r\n                                        {sub.label}\r\n                                </MenuItem>\r\n                               )\r\n                           })}\r\n                        </Select>\r\n                    </Grid>\r\n                    \r\n                    <Grid item xs={12} sm={6}>\r\n                        <InputLabel>Shipping Options</InputLabel>\r\n                        <Select value={shippingOption} fullWidth onChange={(e) => shippingOption(e.target.value)}>\r\n                           {options.map((sO) => {\r\n                               return (\r\n                                <MenuItem key={sO.id} value={sO.id} >\r\n                                        {sO.label}\r\n                                </MenuItem>\r\n                               )\r\n                           })}\r\n                        </Select>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n                <br />\r\n                <div style={{display: 'flex', justifyContent:'space-between'}}>\r\n                    <Button component={Link} to=\"/cart\" variant=\"outline\" style={{border: '1px solid black'}}>Back to cart</Button>\r\n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\">Next</Button>\r\n\r\n                </div>\r\n              </form>\r\n           </FormProvider>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddressForm\r\n","C:\\Users\\uw\\Desktop\\site\\e-commerce\\src\\Components\\CheckoutForm\\PaymentForm.jsx",[],"C:\\Users\\uw\\Desktop\\site\\e-commerce\\src\\Components\\CheckoutForm\\CustomTextField.jsx",[],["113","114"],"C:\\Users\\uw\\Desktop\\site\\e-commerce\\src\\Components\\CheckoutForm\\Review.jsx",[],"C:\\Users\\uw\\Desktop\\site\\e-commerce\\src\\Components\\SideMenu\\SideMenu.jsx",[],"C:\\Users\\uw\\Desktop\\site\\e-commerce\\src\\Components\\SideMenu\\style.js",[],"C:\\Users\\uw\\Desktop\\site\\e-commerce\\src\\Components\\SideMenu\\Items\\Items.jsx",["115"],"import React from 'react'\r\nimport useStyles from './style'\r\nimport { Typography } from '@material-ui/core';\r\nimport trending from '../../../assets/trending.svg'\r\nimport briefcase from '../../../assets/briefcase.svg'\r\nimport highHeel from '../../../assets/high-heel.svg'\r\nimport ring from '../../../assets/ring.svg'\r\nimport shirt from '../../../assets/shirt.svg'\r\n\r\n\r\nfunction Items() {\r\n    const classes = useStyles\r\n  \r\n    const items = [\r\n        ['New in', trending],\r\n        ['Clothing', shirt],\r\n        ['Shoes', highHeel],\r\n        ['Accessories', ring],\r\n        ['Outlet', briefcase]\r\n    ]\r\n    return (\r\n        <ul style={classes.Items}>\r\n            { items.map((item, i) => {\r\n                return (\r\n                    <li style={classes.item} key={item[0]+i}>\r\n                        <img src={item[1]} height=\"20px\"/>\r\n                        {console.log(item[1])}\r\n                        <Typography style={classes.Text} variant=\"subtitle1\">{item[0]}</Typography>\r\n                    </li>\r\n                )\r\n            }) }\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default Items\r\n","C:\\Users\\uw\\Desktop\\site\\e-commerce\\src\\Components\\SideMenu\\Items\\style.js",[],{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":2,"column":46,"nodeType":"122","messageId":"123","endLine":2,"endColumn":54},{"ruleId":"120","severity":1,"message":"124","line":2,"column":56,"nodeType":"122","messageId":"123","endLine":2,"endColumn":60},{"ruleId":"125","severity":1,"message":"126","line":30,"column":3,"nodeType":"127","messageId":"128","endLine":30,"endColumn":7},{"ruleId":"129","severity":1,"message":"130","line":31,"column":8,"nodeType":"131","endLine":31,"endColumn":14,"suggestions":"132"},{"ruleId":"129","severity":1,"message":"133","line":40,"column":8,"nodeType":"131","endLine":40,"endColumn":10,"suggestions":"134"},{"ruleId":"129","severity":1,"message":"135","line":49,"column":8,"nodeType":"131","endLine":49,"endColumn":26,"suggestions":"136"},{"ruleId":"116","replacedBy":"137"},{"ruleId":"118","replacedBy":"138"},{"ruleId":"139","severity":1,"message":"140","line":26,"column":25,"nodeType":"141","endLine":26,"endColumn":59},"no-native-reassign",["142"],"no-negated-in-lhs",["143"],"no-unused-vars","'MenuItem' is defined but never used.","Identifier","unusedVar","'Menu' is defined but never used.","no-dupe-keys","Duplicate key 'link'.","ObjectExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'activeStep', 'history', and 'steps.length'. Either include them or remove the dependency array.","ArrayExpression",["144"],"React Hook useEffect has a missing dependency: 'checkoutToken.id'. Either include it or remove the dependency array.",["145"],"React Hook useEffect has missing dependencies: 'checkoutToken.id' and 'shippingCountry'. Either include them or remove the dependency array.",["146"],["142"],["143"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"147","fix":"148"},{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},"Update the dependencies array to be: [activeStep, cart, history, steps.length]",{"range":"153","text":"154"},"Update the dependencies array to be: [checkoutToken.id]",{"range":"155","text":"156"},"Update the dependencies array to be: [checkoutToken.id, shippingCountry, shippingDevision]",{"range":"157","text":"158"},[1250,1256],"[activeStep, cart, history, steps.length]",[2112,2114],"[checkoutToken.id]",[2395,2413],"[checkoutToken.id, shippingCountry, shippingDevision]"]